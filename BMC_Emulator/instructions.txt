//read the first elem of the array

INP R0,2
STR R0,110

//use R1 as an increment for the while

MOV R1,111
BRA #WHILE

//keep adding numbers/ characters in the calculator
// * is ASCII 42
// + is ASCII 43
// - is ASCII 45
// / is ASCII 47
// = is ASCII 61
// % is ASCII 37

#WHILE   INP R0,2
CMP R0,61

//if we encountered '=' then we must stop reading

BEQ #STOPWHILE

//if we didn't, store

STR R0,R1
ADD R1,1

//store the nr of elem in memory at 101

STR R1,101

//keep going until we encounter '='

BRA #WHILE

//we encountered '=' and we display

#STOPWHILE MOV R1,111
STR R1,100

//store the i in memory at 100

BRA #LOOP
#LOOP    LDR R0,101
CMP R1,R0
BEQ #STOP
LDR R0,R1
CMP R0,45

//if the character is - then branch

BEQ #MINUS

//now compare if its /

CMP R0,47
BEQ #DIVIDE

//now compare if its +

CMP R0,43
BEQ #PLUS

//now compare if its *

CMP R0,42
BEQ #MULTIPLY

//now compare if its %

CMP R0,37
BEQ #MODULO

//calculate the - operation using the registers

#MINUS   SUB R1,1
LDR R0,R1
ADD R1,2
LDR R1,R1
SUB R0,R1
OUT R0,2
STR R0,103
MOV R0,10
OUT R0,4

//get i back and change the array with the new found value

BRA #CHANGE
#STOP    HLT
#CHANGE  LDR R1,100
STR R1,R1
SUB R1,1
LDR R0,103
STR R0,R1
ADD R1,2
STR R0,R1
ADD R1,1
STR R1,100
BRA #LOOP

//calculate the - operation using the registers

#PLUS    SUB R1,1
LDR R0,R1
ADD R1,2
LDR R1,R1
ADD R0,R1
OUT R0,2
STR R0,103
MOV R0,10
OUT R0,4

//get i back and change the array with the new found value

BRA #CHANGE
#MULTIPLY SUB R1,1
LDR R0,R1
ADD R1,2
LDR R1,R1
MUL R0,R1
OUT R0,2
STR R0,103
MOV R0,10
OUT R0,4

//get i back and change the array with the new found value

BRA #CHANGE

#DIVIDE  SUB R1,1
LDR R0,R1
ADD R1,2
LDR R1,R1
DIV R0,R1
OUT R0,2
STR R0,103
MOV R0,10
OUT R0,4

//get i back and change the array with the new found value

BRA #CHANGE

#MODULO SUB R1,1
LDR R0,R1
ADD R1,2
LDR R1,R1
MOD R0,R1
OUT R0,2
STR R0,103
MOV R0,10
OUT R0,4

//get i back and change the array with the new found value

BRA #CHANGE